#!/usr/bin/perl
#
# agi-record_prompts.agi
#
## Copyright (C) 2008  Matt Florell <vicidial@gmail.com>      LICENSE: AGPLv2
## Copyright (C) 2009  Lott Caskey  <lottcaskey@gmail.com>    LICENSE: AGPLv3
## Copyright (C) 2009  Steve Szmidt <techs@callcentersg.com>  LICENSE: AGPLv3
##
##     This file is part of OSDial.
##
##     OSDial is free software: you can redistribute it and/or modify
##     it under the terms of the GNU Affero General Public License as
##     published by the Free Software Foundation, either version 3 of
##     the License, or (at your option) any later version.
##
##     OSDial is distributed in the hope that it will be useful,
##     but WITHOUT ANY WARRANTY; without even the implied warranty of
##     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##     GNU Affero General Public License for more details.
##
##     You should have received a copy of the GNU Affero General Public
##     License along with OSDial.  If not, see <http://www.gnu.org/licenses/>.
##
#
# for recording prompts to GSM file over the phone
# Saves recordings with 8-digit filenames to be played when exten is dialed
#
#	; prompts for recording AGI script, ID is 4321
#       ; first variable is format (gsm/wav)
#	; second variable is timeout in milliseconds (default is 360000 [6 minutes])
#	exten => 8167,1,Answer
#	exten => 8167,2,AGI(agi-record_prompts.agi,wav,360000)
#	exten => 8167,3,Hangup
#	exten => 8168,1,Answer
#	exten => 8168,2,AGI(agi-record_prompts.agi,gsm,360000)
#	exten => 8168,3,Hangup
#
#	; playback of recorded prompts
#	exten => _851XXXXX,1,Answer
#	exten => _851XXXXX,2,Playback(${EXTEN})
#	exten => _851XXXXX,3,Hangup
#
#	GSM Sound Files used:
#	- ld_welcome_pin_number
#	- ld_invalid_pin_number
#	- vm-rec-generic
#	- auth-thankyou
#	- vm-review
#	- vm-msgsaved
#	- vm-goodbye
#

$|++;

use strict;
use OSDial;

my $prog = 'agi-record_prompts.agi';
my $DB=1;

my $osdial = OSDial->new('DB'=>$DB);
$osdial->AGI($prog);

my $AGI = $osdial->AGI();

$osdial->agi_output('Starting.');

my $format = 'gsm';   # Default to gsm.
my $timeout = 360000; # Default to 6 minutes.
$format = lc($ARGV[0]) if (length($ARGV[0])>0);
$timeout = $ARGV[1] if (length($ARGV[1])>0);

$osdial->agi_output(sprintf('ARGs: format=%s timeout=%s',$format, $timeout));

my $session = get_recording_extension($osdial);
my $saved = main_loop($osdial, $AGI, $session, $format, $timeout);
if ($saved) {
	set_recording_extension($osdial,$session);
	$AGI->stream_file('auth-thankyou');   
	$AGI->say_digits($session);
	$AGI->stream_file('beep');   
	$AGI->say_digits($session);
	$AGI->stream_file('vm-goodbye');   
}
$osdial->agi_output('Exiting.');

exit;



sub main_loop {
	my ($osdial, $AGI, $session, $format, $timeout) = @_;
	my $pin = '';
	my $stop_loop=0;
	my $quit_program=0;
	my $loop_counter=0;
	while (length($pin) ne 4 and !$stop_loop) {
		$pin = enter_pin_number($osdial, $AGI);

		$loop_counter++;
		if ($loop_counter > 3) {
			$stop_loop++;
			$quit_program++;
		}
		$osdial->agi_output(sprintf('main_loop pin:%s',$pin.''));
	}

	if ($pin ne '4321') {
		$AGI->stream_file('ld_invalid_pin_number');   
		$quit_program++;
	}

	if ($quit_program) {
		$AGI->stream_file('vm-goodbye');   
		return 0;
	}

	return record_prompts($osdial, $AGI, $session, $format, $timeout);
}



sub record_prompts {
	my ($osdial, $AGI, $session, $format, $timeout) = @_;
	$AGI->stream_file('beep');
	$AGI->stream_file('vm-rec-generic');
	$AGI->stream_file('beep');

	my $interrupt_digit = $AGI->record_file('/opt/osdial/media/'.$session, $format, '123456789*#', $timeout, 1);
	$osdial->agi_output(sprintf('record_prompts interrupt_digit:%s',$interrupt_digit.''));

	my $totalDTMF='';
	$totalDTMF = chr($interrupt_digit) if ($interrupt_digit > 1);

	$osdial->agi_output(sprintf('record_prompts totalDTMF:%s',$totalDTMF.''));
	$AGI->stream_file('beep');

	return verify_recording($osdial, $AGI, $session, $format, $timeout);
}



sub verify_recording {
	my ($osdial, $AGI, $session, $format, $timeout) = @_;
	my $interrupt_digit = $AGI->stream_file('vm-review','123456789');
	$osdial->agi_output(sprintf('verify_recording interrupt_digit:%s',$interrupt_digit.''));

	my $totalDTMF='';
	my $digit_loop_counter=0;
	if ($interrupt_digit > 1) {
		$totalDTMF=chr($interrupt_digit);
		$digit_loop_counter++;
	}


	my $digits_being_entered=1;
	while ($digit_loop_counter < 1) {
		my $digit = chr($AGI->wait_for_digit('2000000'));
		if ($digit =~ /\d/) {
			$totalDTMF .= $digit;
			$osdial->agi_output(sprintf('verify_recording wait_for_digit:%s',$digit.''));
		} else {
			$digit_loop_counter=1;
		}
		$digit_loop_counter++;
	}

	$osdial->agi_output(sprintf('enter_pin_number totalDTMF:%s',$totalDTMF.''));
	$totalDTMF =~ s/\D//gi;
	my $pin = $totalDTMF;
	my $verified = 0;
	if (length($pin)<1) {
		$verified = verify_recording($osdial,$AGI,$session,$format,$timeout);
	} elsif ($pin == '1') {
		$osdial->media_add_file('/opt/osdial/media/'.$session.'.'.$format);
		$osdial->media_save_file('/var/lib/asterisk/sounds/osdial', $session.'.'.$format);
		$osdial->media_save_file('/mnt/ramdisk/sounds/osdial', $session.'.'.$format) if (-e "/mnt/ramdisk/sounds");
		$verified = 1;
	} elsif ($pin == '2') {
		$AGI->stream_file('/opt/osdial/media/'.$session);
		$verified = verify_recording($osdial,$AGI,$session,$format,$timeout);
	} elsif ($pin == '3') {
		unlink('/opt/osdial/media/'.$session.'.'.$format);
		$verified = record_prompts($osdial,$AGI,$session,$format,$timeout);
	}
	return $verified;
}



sub enter_pin_number {
	my ($osdial,$AGI) = @_;
	my $interrupt_digit = $AGI->stream_file('ld_welcome_pin_number','123456789');   
	$osdial->agi_output(sprintf('enter_pin_number interrupt_digit:%s',$interrupt_digit.''));

	my $totalDTMF='';
	$totalDTMF=chr($interrupt_digit) if ($interrupt_digit > 1);

	my $digits_being_entered=1;
	my $digit_loop_counter=0;
	while ($digits_being_entered and $digit_loop_counter < 20) {
		my $digit = chr($AGI->wait_for_digit('90000'));
		if ($digit =~ /\d/) {
			$totalDTMF .= $digit;
			$osdial->agi_output(sprintf('enter_pin_number wait_for_digit:%s',$digit.''));
		} else {
			$digits_being_entered=0;
		}
		$digit_loop_counter++;
	}

	$osdial->agi_output(sprintf('enter_pin_number totalDTMF:%s',$totalDTMF.''));
	$totalDTMF =~ s/\D//gi;
	return $totalDTMF;
}



sub get_recording_extension {
	my ($osdial) = @_;
	my $sret = $osdial->sql_query("SELECT (extension*1) AS media_recording_extension FROM osdial_media WHERE filename=description AND filename LIKE concat(extension,'.\%') ORDER BY (extension*1) DESC LIMIT 1;");
	my $session = $osdial->{settings}{last_recording_extension};
	$session = $sret->{media_recording_extension} if ($sret->{media_recording_extension} > $session);
	$session++;
	my $sret = $osdial->sql_query(sprintf("SELECT count(*) AS media_recording_count FROM osdial_media WHERE extension='\%s';",$session));
	my $mrc = $sret->{media_recording_count};
	while ($mrc>0) {
		$session++;
		my $sret = $osdial->sql_query(sprintf("SELECT count(*) AS media_recording_count FROM osdial_media WHERE extension='\%s';",$session));
		$mrc = $sret->{media_recording_count};
	}
	$osdial->agi_output(sprintf('Read last_recording_extension:%s session:%s',$osdial->{settings}{last_recording_extension},$session));
	return $session;
}

sub set_recording_extension {
	my ($osdial,$session) = @_;
	$osdial->sql_execute(sprintf("UPDATE system_settings SET last_recording_extension='%s';",$session));
	$osdial->agi_output(sprintf('Wrote last_recording_extension:%s session:%s',$osdial->{settings}{last_recording_extension},$session));
	$osdial->{settings}{last_recording_extension} = $session;
}
